buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.6.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

// === Repository config ===

repositories {
    mavenCentral()
}

// === JAVA configuration ===

//noinspection GroovyAssignabilityCheck
compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// === JAR Properties ===

//noinspection GroovyAssignabilityCheck
jar {
    manifest {
        attributes("Implementation-Title": name,
                "Implementation-Version": version)
    }
}

// === Integration Test Configuration ===

//noinspection GroovyAssignabilityCheck
sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
    }
}

//noinspection GroovyAssignabilityCheck
configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    it.mustRunAfter test
}
check.dependsOn integrationTest

tasks.withType(Test) {
    reports.html.destination = file("${reportsDir}/${name}")
    reports.junitXml.destination = file("${testResultsDir}/${name}")
}

// === Dependencies ===

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'

    //testing
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

// === IDEA configuration ===

idea {
    module {
        scopes.TEST.plus += [configurations.integrationTestCompile, configurations.integrationTestRuntime]
    }
}

// === Wrapper generation ===

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}
